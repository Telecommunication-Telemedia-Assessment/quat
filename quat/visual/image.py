#!/usr/bin/env python3
"""
Purely image based features
"""
"""
    This file is part of quat.
    quat is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    quat is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with quat. If not, see <http://www.gnu.org/licenses/>.

    Author: Steve Göring
"""
import json
import os

import numpy as np
import pandas as pd
import cv2
import skimage.metrics
import skimage.restoration
from skimage import img_as_ubyte
import skimage.color
from skimage import exposure
import skvideo.measure
import scipy


def color_fulness_features(image_rgb):
    """
    calculates color fullness

    re-implementated by Serge Molina

    References
    ----------
    - Hasler, David, and Sabine E. Suesstrunk. "Measuring colorfulness in natural images."
      In: Human vision and electronic imaging VIII. Vol. 5007. International Society for Optics and Photonics, 2003.
    """
    assert len(image_rgb.shape) == 3

    rg = (image_rgb[:, :, 0] - image_rgb[:, :, 1]).ravel()
    yb = (image_rgb[:, :, 0] / 2 + image_rgb[:, :, 1] / 2 - image_rgb[:, :, 2]).ravel()

    rg_std = np.std(rg)
    yb_std = np.std(yb)

    rg_mean = np.mean(rg)
    yb_mean = np.mean(yb)

    trigo_len_std = np.sqrt(rg_std ** 2 + yb_std ** 2)
    neutral_dist = np.sqrt(rg_mean ** 2 + yb_mean ** 2)

    return float(trigo_len_std + 0.3 * neutral_dist)


def calc_tone_features(image, gray=False):
    """
    calculate tone feature,

    re-implemented by Serge Molina

    References
    ----------
    - T. O. Aydın, A. Smolic, and M. Gross. "Automated aesthetic analysis of photographic images".
      In: IEEE transactions on visualization and computer graphics 21.1 (2015), pp. 31–42.
    """
    if not gray:
        image_gray = skimage.color.rgb2gray(image)
    else:
        image_gray = image

    image_1d = image_gray.ravel()
    percentile05_value = np.percentile(image_1d, 5)
    percentile95_value = np.percentile(image_1d, 95)

    percentile30_value = np.percentile(image_1d, 30)
    percentile70_value = np.percentile(image_1d, 70)

    u = 0.05
    o = 0.05

    c_u = min(u, percentile95_value - percentile70_value) / u
    c_o = min(o, percentile30_value - percentile05_value) / o

    return c_u * c_o * (percentile95_value - percentile05_value)


def calc_contrast_features(frame):
    """
    calculates contrast based on histogram equalization,

    based on julan zebelein's master thesis
    """
    frame = img_as_ubyte(frame)
    hist, bins = np.histogram(frame.flatten(), 1024, [0, 1024])
    cdf = hist.cumsum()
    cdf_normalized = cdf * hist.max() / cdf.max()

    cdf_m = np.ma.masked_equal(cdf, 0)
    cdf_m = (cdf_m - cdf_m.min()) * 1024 / (cdf_m.max() - cdf_m.min())
    cdf = np.ma.filled(cdf_m, 0).astype("uint8")
    img2 = cdf[frame]

    hist2, bins = np.histogram(img2.flatten(), 1024, [0, 1024])
    cdf2 = hist2.cumsum()
    cdf2_normalized = cdf2 * hist2.max() / cdf2.max()

    sumAverageDifCDF = 0
    for x in range(256):
        histValue = cdf_normalized[x]
        perfectHistValue = cdf2_normalized[x]

        histValuePercent = (100 * histValue) / perfectHistValue
        difPercent = abs(histValuePercent - 100)

        sumAverageDifCDF += difPercent

    avgDif = 100 - sumAverageDifCDF / len(cdf_normalized)
    return float(avgDif)


def calc_fft_features(frame, debug=False):
    """
    calculates fft feature,

    based on julan zebelein's master thesis

    References
    ----------
    - I. Katsavounidis et al. "Native resolution detection of video sequences".
      In: Annual Technical Conference and Exhibition, SMPTE 2015. SMPTE. 2015, pp. 1–20.
    """

    def radial_profile(data, center):
        y, x = np.indices((data.shape))
        r = np.sqrt((x - center[0]) ** 2 + (y - center[1]) ** 2)
        r = r.astype(np.int)

        tbin = np.bincount(r.ravel(), data.ravel())
        nr = np.bincount(r.ravel())
        radialprofile = tbin / nr
        return radialprofile

    # start video
    file_width = int(frame.shape[1])
    file_height = int(frame.shape[0])
    frame = np.uint8(frame)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    prefinal = cv2.resize(gray, (file_width, file_height))
    # final = cv2.GaussianBlur(prefinal,(5,5),0)
    final = cv2.bilateralFilter(prefinal, 9, 75, 75)

    f = np.fft.fft2(final)
    fshift = np.fft.fftshift(f)

    magnitude_spectrum = 20 * np.log(0.00000001 + np.abs(fshift))

    file_height, file_width = magnitude_spectrum.shape
    CurrentCenter = (file_width / 2, file_height / 2)

    # calculate the azimuthally averaged 1D power spectrum
    psf1D = radial_profile(magnitude_spectrum, CurrentCenter)
    lowFreqInd = int((len(psf1D) / 2))

    psf1D_onlyHighFreq = psf1D[lowFreqInd:]
    sum_of_high_frequencies = sum(psf1D_onlyHighFreq)

    return float(sum_of_high_frequencies)


def calc_saturation_features(frame, debug=True):
    """
    calculates saturation of a given image,

    re-implemented by Serge Molina

    References
    ----------
    - T. O. Aydın, A. Smolic, and M. Gross. "Automated aesthetic analysis of photographic images".
      In: IEEE transactions on visualization and computer graphics 21.1 2015, pp. 31–42.""
    """
    file_width = int(frame.shape[1])
    file_height = int(frame.shape[0])
    frame = np.uint8(frame)

    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    average_hsvValue = hsv[:, :, 1].sum() / (file_width * file_height)
    averageSaturationCurrentFrame = (average_hsvValue * 100) / 256

    return float(averageSaturationCurrentFrame)


def calc_blur_features(frame, debug=False):
    """
    estimates blurriness using Laplacian filter,

    based on julian zebelein's master thesis
    """

    def variance_of_laplacian(image):
        # compute the Laplacian of the image and then return the focus
        # measure, which is simply the variance of the Laplacian
        return cv2.Laplacian(image, cv2.CV_64F, ksize=5).var()

    file_width = int(frame.shape[1])
    file_height = int(frame.shape[0])
    frame = np.uint8(frame)
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    prefinal = cv2.resize(gray, (file_width, file_height))
    # final = cv2.GaussianBlur(prefinal,(5,5),0)
    final = cv2.bilateralFilter(prefinal, 9, 75, 75)
    fm = variance_of_laplacian(final)
    return float(fm)


def calc_brisque_features(image, gray=False):
    """
    calcualte brisque no-reference features,

    References
    ----------
    - scikit-video
    - Mittal, A. K. Moorthy and A. C. Bovik, "No-Reference Image Quality Assessment in the Spatial Domain"
      In: IEEE Transactions on Image Processing, 2012.
    - Mittal, A. K. Moorthy and A. C. Bovik, "Referenceless Image Spatial Quality Evaluation Engine,"
      In: 45th Asilomar Conference on Signals, Systems and Computers , November 2011.
    """
    if not gray:
        image = skimage.color.rgb2gray(image)
    brisque_features = skvideo.measure.brisque_features(image)
    return [float(x) for x in brisque_features.tolist()[0]]


from skvideo.measure.niqe import get_patches_test_features


class Niqe:
    # this is copied from skvideo and adjusted to fix the current bugs
    # problem is that the current skvideo git version does not properly include the data folder in measure package, thus the coeffs are coded here
    pop_mu = np.array([[2.906448260073254, 0.9912415131212207, 0.8672847985347989, 0.03376682625226657, 0.19129863141957695, 0.24063451656451296, 0.8630013736263737, 0.046572841079659894, 0.18025915523215388, 0.24803150579758834, 0.8646945970695957, -0.02502171356331532, 0.23461499257872778, 0.23461499257872778, 0.86434706959707, -0.0244115128745251, 0.2339393506884374, 0.2339393506884374, 3.0930842490842463, 1.0053877224743404, 0.8874894688644699, 0.02783882999646689, 0.20596017257806815, 0.24628655401756147, 0.8798905677655665, 0.0403734795696924, 0.1934716253156927, 0.2521888712633299, 0.8841515567765572, -0.026137033943274657, 0.24538535504983408, 0.24538535504983408, 0.8842861721611719, -0.02654088821466217, 0.2457485316591176, 0.2457485316591176]])
    pop_cov = np.array([[0.9273921924660503, 0.08855465836760826, 0.11219393366112483, 0.009055741204154276, 0.05350628884535522, 0.06552532061901524, 0.11273637730426965, 0.020341366465488415, 0.045954270741192134, 0.07235309113175227, 0.1081891461243562, -0.007820361159087836, 0.06509164241323753, 0.06509164241323753, 0.10788522456200897, -0.007769246433016409, 0.06439575484638058, 0.06439575484638058, 0.8138070268072152, 0.1036906814670233, 0.13340956656435285, 0.00713067533551069, 0.07357812969705588, 0.08231633282842801, 0.1441539611242133, 0.012773722258771958, 0.07095071822633825, 0.0871442822485444, 0.1206709860860816, -0.011939056137969013, 0.0848059038140127, 0.0848059038140127, 0.12410988357189837, -0.014241858893984296, 0.08655590287340319, 0.08655590287340319], [0.08855465836760826, 0.029548371571183955, 0.018570563338181672, 0.0013135469997326123, 0.01435063455138428, 0.01609186926502817, 0.018462965138272867, 0.0025238858697736164, 0.013428896698609487, 0.016800957048364512, 0.017478793816981388, -0.0027565981315128365, 0.016839099521809606, 0.016839099521809606, 0.017411863349669786, -0.0025831195587135156, 0.016679007834353204, 0.016679007834353204, 0.05548901744490612, 0.023339663484976406, 0.014469012622664864, 0.00014679927487563034, 0.012410072965510234, 0.012537839412733481, 0.01435961797825591, 0.0009227955939293934, 0.011787455721549635, 0.01297997883154356, 0.013053013633600853, -0.0020872422483196288, 0.013318892078465091, 0.013318892078465091, 0.013082765337306053, -0.0021597796457995116, 0.013368222290772712, 0.013368222290772712], [0.11219393366112483, 0.018570563338181672, 0.019137251880582348, 0.0010216161560575377, 0.01082362723242863, 0.012166383558786178, 0.01803383561411107, 0.0038914021731822667, 0.00844608651871002, 0.013637530670103112, 0.01722028536904385, -0.0016108052782574055, 0.012095655825962193, 0.012095655825962193, 0.01718869039061412, -0.001457434249006362, 0.011952286863375898, 0.011952286863375898, 0.0895354936312736, 0.01773392760014273, 0.018611669972682723, 0.0002621916925481936, 0.011684976069270167, 0.011923134301110158, 0.018707696778217982, 0.002675181779456553, 0.009792255230707576, 0.013341596925961659, 0.01605849186059781, -0.00180907118652583, 0.012392898108418655, 0.012392898108418655, 0.016404333486447927, -0.0018120884993667586, 0.012412491484723474, 0.012412491484723474], [0.009055741204154276, 0.0013135469997326123, 0.0010216161560575377, 0.0017989316046080324, -0.0006911827044484653, 0.001824643974136694, 0.0019538774298866004, -0.0009301310627895392, 0.0016042498497103083, 0.0002886889018194919, 0.0012054823320323477, 0.00024514971316745435, 0.0005225759651747694, 0.0005225759651747694, 0.0011293317350177065, 0.00025262444602466486, 0.0005000945544188823, 0.0005000945544188823, 0.011920154212729807, 0.0021462095986930258, 0.0016586366995191575, 0.0016680239579931948, 0.0001081029229649053, 0.0024229335142106536, 0.0028105977887127923, -0.0009019960512438799, 0.0023179377121414274, 0.0010178669386396563, 0.0016632969362090511, -6.316161391185163e-05, 0.0013919914736099112, 0.0013919914736099112, 0.001647752170201596, 6.946462638987046e-05, 0.0012797479063465407, 0.0012797479063465407], [0.05350628884535522, 0.01435063455138428, 0.01082362723242863, -0.0006911827044484653, 0.008959450400319067, 0.00792311081204886, 0.00976867606061667, 0.002554685724188537, 0.0062447093968134824, 0.009694145804515306, 0.009610886442430909, -0.0017327797529237035, 0.009219516887947832, 0.009219516887947832, 0.00961805691190911, -0.0016059711352166197, 0.00911016044786867, 0.00911016044786867, 0.02916515577825342, 0.010885650810567502, 0.00832486467169413, -0.0012640991717778887, 0.007561923997603933, 0.005742537655872843, 0.007485201169455672, 0.0015364877018550374, 0.005220405113748357, 0.007312824757942015, 0.007015227494375725, -0.0011997494041495408, 0.006952859680136182, 0.006952859680136182, 0.007104941527030805, -0.0013334741886531244, 0.007053598791478963, 0.007053598791478963], [0.06552532061901524, 0.01609186926502817, 0.012166383558786178, 0.001824643974136694, 0.00792311081204886, 0.010413327366886934, 0.012437759128645557, 0.0012379997562061908, 0.008445710207884136, 0.010029116550920742, 0.011233380272229273, -0.0013855308332960275, 0.009887391984854594, 0.009887391984854594, 0.011137711471388291, -0.001253781719392413, 0.009751401821199874, 0.009751401821199874, 0.0450874605170605, 0.013792129574712209, 0.01048276052665141, 0.0010719718323540573, 0.007611445835442016, 0.009041738939251543, 0.011263223842956561, 0.0002481443766919482, 0.008397688016313696, 0.00863400193038658, 0.009224313442707134, -0.0012766724491389588, 0.008806760805024341, 0.008806760805024341, 0.009279007707073536, -0.0012379715152906398, 0.008758241358753246, 0.008758241358753246], [0.11273637730426965, 0.018462965138272867, 0.01803383561411107, 0.0019538774298866004, 0.00976867606061667, 0.012437759128645557, 0.01879255199078295, 0.0028913206743126315, 0.009410675643810583, 0.013181178320172876, 0.016872415444896417, -0.0014097692038694957, 0.011837617252925781, 0.011837617252925781, 0.01683315023306973, -0.0013914248061734178, 0.011763568124664165, 0.011763568124664165, 0.09306134069961212, 0.01797021408984733, 0.018177341975077213, 0.0015390601127036165, 0.010770761766406851, 0.012798945655579408, 0.019575990072513438, 0.001361815906615679, 0.011253486773586186, 0.012962162118453253, 0.016038466580545026, -0.0016524944219691474, 0.012470523919334734, 0.012470523919334734, 0.01631898265757379, -0.0018292191924360608, 0.012597165260660844, 0.012597165260660844], [0.020341366465488415, 0.0025238858697736164, 0.0038914021731822667, -0.0009301310627895392, 0.002554685724188537, 0.0012379997562061908, 0.0028913206743126315, 0.002192578610108268, -2.6569878375308394e-05, 0.0029965795745213685, 0.0033338202947283077, -0.0002202843374830572, 0.0018560930811755577, 0.0018560930811755577, 0.003416067619407425, -0.0002889325664066726, 0.0019293219825266589, 0.0019293219825266589, 0.013211524426311409, 0.002737598808951786, 0.0036073273452437832, -0.001148761056188055, 0.002800039125240178, 0.001180528082484279, 0.0026026708128929587, 0.0018254260963986035, 0.000341303499614174, 0.0028667153845528203, 0.0029357118986275245, -0.0003477286454441522, 0.0020279622250329124, 0.0020279622250329124, 0.0031204503990416256, -0.00048475148036149907, 0.0021564843611129583, 0.0021564843611129583], [0.045954270741192134, 0.013428896698609487, 0.00844608651871002, 0.0016042498497103083, 0.0062447093968134824, 0.008445710207884136, 0.009410675643810583, -2.6569878375308394e-05, 0.007784887780827609, 0.0076248632614211685, 0.008039335001579332, -0.0013623098749579905, 0.00820757967376623, 0.00820757967376623, 0.007927148348084464, -0.0012070836463288057, 0.008042753933408156, 0.008042753933408156, 0.029603078059973916, 0.01050746577143881, 0.006862487731373712, 0.0011781841577521985, 0.005311542379279505, 0.006914525975940965, 0.007934351484263595, -0.0008207307201568602, 0.007101217161880222, 0.005876255150785834, 0.006183747623981389, -0.0009821646875008067, 0.006546199491273242, 0.006546199491273242, 0.0060953716391167435, -0.0009391540341901392, 0.00647854436943179, 0.00647854436943179], [0.07235309113175227, 0.016800957048364512, 0.013637530670103112, 0.0002886889018194919, 0.009694145804515306, 0.010029116550920742, 0.013181178320172876, 0.0029965795745213685, 0.0076248632614211685, 0.011647759611456225, 0.012466827815656209, -0.0016464894170205933, 0.010653763894853886, 0.010653763894853886, 0.012463988775540408, -0.0015729636999874512, 0.010580475026882438, 0.010580475026882438, 0.04675181889154591, 0.014196919814004748, 0.011652723898985638, -0.0004347093848110196, 0.009099779270803689, 0.008425776769878648, 0.011281720473440516, 0.0017164949031693107, 0.00743317070217635, 0.009729042343777422, 0.010058872464066095, -0.0014431313689505277, 0.009230529993271615, 0.009230529993271615, 0.0102162849715358, -0.0015732582518156533, 0.009328869731917724, 0.009328869731917724], [0.1081891461243562, 0.017478793816981388, 0.01722028536904385, 0.0012054823320323477, 0.009610886442430909, 0.011233380272229273, 0.016872415444896417, 0.0033338202947283077, 0.008039335001579332, 0.012466827815656209, 0.017619478376658473, -0.0020257540317666196, 0.012069690452472328, 0.012069690452472328, 0.017161152769318056, -0.0015388826292036368, 0.011528635343626255, 0.011528635343626255, 0.09241512056534108, 0.01682640267526244, 0.01745161176167326, 0.0006522059811344075, 0.010612876329957324, 0.011409766953544906, 0.01736388090183217, 0.0021777849700245593, 0.009416474436443646, 0.012292483301483746, 0.01672894186366006, -0.0024339602378612444, 0.012634725033463233, 0.012634725033463233, 0.01654840672323936, -0.001977439875771917, 0.012149418588547492, 0.012149418588547492], [-0.007820361159087836, -0.0027565981315128365, -0.0016108052782574055, 0.00024514971316745435, -0.0017327797529237035, -0.0013855308332960275, -0.0014097692038694957, -0.0002202843374830572, -0.0013623098749579905, -0.0016464894170205933, -0.0020257540317666196, 0.0012275520058364203, -0.002557695677793709, -0.002557695677793709, -0.00169074685699456, 0.00010395684570656857, -0.0016297432564264173, -0.0016297432564264173, -0.003899061202418042, -0.0014484511759400003, -0.0010089305741675934, 0.0002724705590646021, -0.0010664133731926836, -0.0006791979479276205, -0.0005708739532877319, -4.3690218082806944e-05, -0.0007530943117580324, -0.0008079861970762249, -0.0014106636916461249, 0.0009937037041208392, -0.0016768201482673599, -0.0016768201482673599, -0.001005874515002585, -7.22309025923408e-05, -0.0007704413009916475, -0.0007704413009916475], [0.06509164241323753, 0.016839099521809606, 0.012095655825962193, 0.0005225759651747694, 0.009219516887947832, 0.009887391984854594, 0.011837617252925781, 0.0018560930811755577, 0.00820757967376623, 0.010653763894853886, 0.012069690452472328, -0.002557695677793709, 0.011381130972261101, 0.011381130972261101, 0.011635451907059606, -0.001499953008805171, 0.010441776744374229, 0.010441776744374229, 0.0423899051713686, 0.01321705952445133, 0.010040762110312709, -9.583735064352973e-05, 0.008079242822771894, 0.007879584324375917, 0.009689071467918212, 0.0007693111609169736, 0.007361708849774164, 0.008350144910173914, 0.009561759635960199, -0.002145638826457563, 0.009284416618531051, 0.009284416618531051, 0.009196017583394164, -0.001262923571853394, 0.008483342275716465, 0.008483342275716465], [0.06509164241323753, 0.016839099521809606, 0.012095655825962193, 0.0005225759651747694, 0.009219516887947832, 0.009887391984854594, 0.011837617252925781, 0.0018560930811755577, 0.00820757967376623, 0.010653763894853886, 0.012069690452472328, -0.002557695677793709, 0.011381130972261101, 0.011381130972261101, 0.011635451907059606, -0.001499953008805171, 0.010441776744374229, 0.010441776744374229, 0.0423899051713686, 0.01321705952445133, 0.010040762110312709, -9.583735064352973e-05, 0.008079242822771894, 0.007879584324375917, 0.009689071467918212, 0.0007693111609169736, 0.007361708849774164, 0.008350144910173914, 0.009561759635960199, -0.002145638826457563, 0.009284416618531051, 0.009284416618531051, 0.009196017583394164, -0.001262923571853394, 0.008483342275716465, 0.008483342275716465], [0.10788522456200897, 0.017411863349669786, 0.01718869039061412, 0.0011293317350177065, 0.00961805691190911, 0.011137711471388291, 0.01683315023306973, 0.003416067619407425, 0.007927148348084464, 0.012463988775540408, 0.017161152769318056, -0.00169074685699456, 0.011635451907059606, 0.011635451907059606, 0.01762940765975512, -0.0018627699213400837, 0.011885391975599143, 0.011885391975599143, 0.09136995104864629, 0.01674223657760027, 0.017261786524324682, 0.0005839423957049847, 0.01057382208329175, 0.011278776245959734, 0.01717902608778462, 0.0022451518587319045, 0.009270354531377535, 0.012239787301512066, 0.016187252459900808, -0.001970216149793652, 0.01207174517344882, 0.01207174517344882, 0.016703322071233134, -0.0024190961132287783, 0.012506914604819267, 0.012506914604819267], [-0.007769246433016409, -0.0025831195587135156, -0.001457434249006362, 0.00025262444602466486, -0.0016059711352166197, -0.001253781719392413, -0.0013914248061734178, -0.0002889325664066726, -0.0012070836463288057, -0.0015729636999874512, -0.0015388826292036368, 0.00010395684570656857, -0.001499953008805171, -0.001499953008805171, -0.0018627699213400837, 0.0010778508687698117, -0.0023052537337030546, -0.0023052537337030546, -0.0027653541173847237, -0.0013915465318707825, -0.0009092093499582584, 0.00032801616478158913, -0.001038384817551456, -0.0005881850779624557, -0.0006231898593992016, -7.077003208684792e-05, -0.0006885487054866799, -0.000778652404130709, -0.0009025319973645145, -0.00014385266701144052, -0.0006464375172178946, -0.0006464375172178946, -0.0011280913097683166, 0.0008910326111195463, -0.0014800096867813738, -0.0014800096867813738], [0.06439575484638058, 0.016679007834353204, 0.011952286863375898, 0.0005000945544188823, 0.00911016044786867, 0.009751401821199874, 0.011763568124664165, 0.0019293219825266589, 0.008042753933408156, 0.010580475026882438, 0.011528635343626255, -0.0016297432564264173, 0.010441776744374229, 0.010441776744374229, 0.011885391975599143, -0.0023052537337030546, 0.011038109372791786, 0.011038109372791786, 0.040880762230829114, 0.013135681706394231, 0.009890571368243685, -0.00015479330874026815, 0.008023748702859223, 0.007753107438785526, 0.00962536951420144, 0.0008257362764962904, 0.0072298285451568335, 0.008293514911389677, 0.008994110538870467, -0.0011802579061661138, 0.008336075091207075, 0.008336075091207075, 0.009306753391053208, -0.0020855088225206478, 0.009078131660126772, 0.009078131660126772], [0.06439575484638058, 0.016679007834353204, 0.011952286863375898, 0.0005000945544188823, 0.00911016044786867, 0.009751401821199874, 0.011763568124664165, 0.0019293219825266589, 0.008042753933408156, 0.010580475026882438, 0.011528635343626255, -0.0016297432564264173, 0.010441776744374229, 0.010441776744374229, 0.011885391975599143, -0.0023052537337030546, 0.011038109372791786, 0.011038109372791786, 0.040880762230829114, 0.013135681706394231, 0.009890571368243685, -0.00015479330874026815, 0.008023748702859223, 0.007753107438785526, 0.00962536951420144, 0.0008257362764962904, 0.0072298285451568335, 0.008293514911389677, 0.008994110538870467, -0.0011802579061661138, 0.008336075091207075, 0.008336075091207075, 0.009306753391053208, -0.0020855088225206478, 0.009078131660126772, 0.009078131660126772], [0.8138070268072152, 0.05548901744490612, 0.0895354936312736, 0.011920154212729807, 0.02916515577825342, 0.0450874605170605, 0.09306134069961212, 0.013211524426311409, 0.029603078059973916, 0.04675181889154591, 0.09241512056534108, -0.003899061202418042, 0.0423899051713686, 0.0423899051713686, 0.09136995104864629, -0.0027653541173847237, 0.040880762230829114, 0.040880762230829114, 1.4891285902419462, 0.1174789617126127, 0.1855896728986395, 0.019242715889258265, 0.08273740217365301, 0.10755947539336021, 0.19616842012621685, 0.014940081868995052, 0.08670897398096986, 0.10554412350587913, 0.1748493578165619, -0.014442814552659994, 0.10545816254465167, 0.10545816254465167, 0.17583123515543844, -0.013333939189518897, 0.10430656805293549, 0.10430656805293549], [0.1036906814670233, 0.023339663484976406, 0.01773392760014273, 0.0021462095986930258, 0.010885650810567502, 0.013792129574712209, 0.01797021408984733, 0.002737598808951786, 0.01050746577143881, 0.014196919814004748, 0.01682640267526244, -0.0014484511759400003, 0.01321705952445133, 0.01321705952445133, 0.01674223657760027, -0.0013915465318707825, 0.013135681706394231, 0.013135681706394231, 0.1174789617126127, 0.026821845978548888, 0.02154278600808222, 0.0015896491630125876, 0.014371556171537734, 0.016449542019175287, 0.022159585401643662, 0.001878407239012884, 0.014204926880133886, 0.016672082952544014, 0.019827017544782343, -0.0021059548777171296, 0.01644656735640279, 0.01644656735640279, 0.02000880825908969, -0.0022032415951337646, 0.016534025805006822, 0.016534025805006822], [0.13340956656435285, 0.014469012622664864, 0.018611669972682723, 0.0016586366995191575, 0.00832486467169413, 0.01048276052665141, 0.018177341975077213, 0.0036073273452437832, 0.006862487731373712, 0.011652723898985638, 0.01745161176167326, -0.0010089305741675934, 0.010040762110312709, 0.010040762110312709, 0.017261786524324682, -0.0009092093499582584, 0.009890571368243685, 0.009890571368243685, 0.1855896728986395, 0.02154278600808222, 0.03499637918359315, 0.002029534565510245, 0.016160744109825285, 0.018658791505483722, 0.03426348556255546, 0.004346052443346936, 0.013890518355826166, 0.01951229042250365, 0.029765867148788757, -0.002055925398418409, 0.01795141474848395, 0.01795141474848395, 0.03087544896104438, -0.001819535880982965, 0.017803344596319208, 0.017803344596319208], [0.00713067533551069, 0.00014679927487563034, 0.0002621916925481936, 0.0016680239579931948, -0.0012640991717778887, 0.0010719718323540573, 0.0015390601127036165, -0.001148761056188055, 0.0011781841577521985, -0.0004347093848110196, 0.0006522059811344075, 0.0002724705590646021, -9.583735064352973e-05, -9.583735064352973e-05, 0.0005839423957049847, 0.00032801616478158913, -0.00015479330874026815, -0.00015479330874026815, 0.019242715889258265, 0.0015896491630125876, 0.002029534565510245, 0.0025792594618649196, -0.0007285233832348245, 0.0028167783476519253, 0.0036987404550610876, -0.001280571802263756, 0.002553181591840908, 0.0007397971597415031, 0.0021903973239445138, 0.00018011455465486508, 0.0011455275200792003, 0.0011455275200792003, 0.0020475976355147064, 0.0003577818490974639, 0.0009632867647705825, 0.0009632867647705825], [0.07357812969705588, 0.012410072965510234, 0.011684976069270167, 0.0001081029229649053, 0.007561923997603933, 0.007611445835442016, 0.010770761766406851, 0.002800039125240178, 0.005311542379279505, 0.009099779270803689, 0.010612876329957324, -0.0010664133731926836, 0.008079242822771894, 0.008079242822771894, 0.01057382208329175, -0.001038384817551456, 0.008023748702859223, 0.008023748702859223, 0.08273740217365301, 0.014371556171537734, 0.016160744109825285, -0.0007285233832348245, 0.010835365251431795, 0.009684079369367554, 0.015127772756581174, 0.0025950218358750847, 0.007889791612435002, 0.011354967556798027, 0.013675806231600026, -0.0015779623217580324, 0.010637812723686236, 0.010637812723686236, 0.01409616358381436, -0.0017127951904986759, 0.010777260025331368, 0.010777260025331368], [0.08231633282842801, 0.012537839412733481, 0.011923134301110158, 0.0024229335142106536, 0.005742537655872843, 0.009041738939251543, 0.012798945655579408, 0.001180528082484279, 0.006914525975940965, 0.008425776769878648, 0.011409766953544906, -0.0006791979479276205, 0.007879584324375917, 0.007879584324375917, 0.011278776245959734, -0.0005881850779624557, 0.007753107438785526, 0.007753107438785526, 0.10755947539336021, 0.016449542019175287, 0.018658791505483722, 0.0028167783476519253, 0.009684079369367554, 0.013422783600286885, 0.019943177122018027, 0.0007939237552010397, 0.011311920925693395, 0.012225461641944456, 0.01647342377187524, -0.0013104068584864252, 0.012071027045695654, 0.012071027045695654, 0.016685856605296628, -0.001220499778497642, 0.011973497620210433, 0.011973497620210433], [0.1441539611242133, 0.01435961797825591, 0.018707696778217982, 0.0028105977887127923, 0.007485201169455672, 0.011263223842956561, 0.019575990072513438, 0.0026026708128929587, 0.007934351484263595, 0.011281720473440516, 0.01736388090183217, -0.0005708739532877319, 0.009689071467918212, 0.009689071467918212, 0.01717902608778462, -0.0006231898593992016, 0.00962536951420144, 0.00962536951420144, 0.19616842012621685, 0.022159585401643662, 0.03426348556255546, 0.0036987404550610876, 0.015127772756581174, 0.019943177122018027, 0.03936673149138628, 0.002770069540765277, 0.016779354133432074, 0.020146849880508313, 0.03019554384886378, -0.0016368635044367711, 0.018321574665190722, 0.018321574665190722, 0.03150238451449687, -0.0016472931059884767, 0.01838624237306308, 0.01838624237306308], [0.012773722258771958, 0.0009227955939293934, 0.002675181779456553, -0.0009019960512438799, 0.0015364877018550374, 0.0002481443766919482, 0.001361815906615679, 0.0018254260963986035, -0.0008207307201568602, 0.0017164949031693107, 0.0021777849700245593, -4.3690218082806944e-05, 0.0007693111609169736, 0.0007693111609169736, 0.0022451518587319045, -7.077003208684792e-05, 0.0008257362764962904, 0.0008257362764962904, 0.014940081868995052, 0.001878407239012884, 0.004346052443346936, -0.001280571802263756, 0.0025950218358750847, 0.0007939237552010397, 0.002770069540765277, 0.002654950485166353, -0.0007325918900405208, 0.002908451168488224, 0.00345926079543293, -0.0002479203758784824, 0.0016217765128008434, 0.0016217765128008434, 0.0037235557687789645, -0.00011420748210993144, 0.0015769473001738467, 0.0015769473001738467], [0.07095071822633825, 0.011787455721549635, 0.009792255230707576, 0.0023179377121414274, 0.005220405113748357, 0.008397688016313696, 0.011253486773586186, 0.000341303499614174, 0.007101217161880222, 0.00743317070217635, 0.009416474436443646, -0.0007530943117580324, 0.007361708849774164, 0.007361708849774164, 0.009270354531377535, -0.0006885487054866799, 0.0072298285451568335, 0.0072298285451568335, 0.08670897398096986, 0.014204926880133886, 0.013890518355826166, 0.002553181591840908, 0.007889791612435002, 0.011311920925693395, 0.016779354133432074, -0.0007325918900405208, 0.011038916877512647, 0.009855145119866458, 0.012684926141063, -0.0012046752544185805, 0.010297446448782756, 0.010297446448782756, 0.012808759908477142, -0.001326176361999632, 0.010348654176948944, 0.010348654176948944], [0.0871442822485444, 0.01297997883154356, 0.013341596925961659, 0.0010178669386396563, 0.007312824757942015, 0.00863400193038658, 0.012962162118453253, 0.0028667153845528203, 0.005876255150785834, 0.009729042343777422, 0.012292483301483746, -0.0008079861970762249, 0.008350144910173914, 0.008350144910173914, 0.012239787301512066, -0.000778652404130709, 0.008293514911389677, 0.008293514911389677, 0.10554412350587913, 0.016672082952544014, 0.01951229042250365, 0.0007397971597415031, 0.011354967556798027, 0.012225461641944456, 0.020146849880508313, 0.002908451168488224, 0.009855145119866458, 0.013685322917480688, 0.017130092404401203, -0.0015233304642269785, 0.012365152188185135, 0.012365152188185135, 0.017582496543288775, -0.0014843557418526786, 0.012368278481901146, 0.012368278481901146], [0.1206709860860816, 0.013053013633600853, 0.01605849186059781, 0.0016632969362090511, 0.007015227494375725, 0.009224313442707134, 0.016038466580545026, 0.0029357118986275245, 0.006183747623981389, 0.010058872464066095, 0.01672894186366006, -0.0014106636916461249, 0.009561759635960199, 0.009561759635960199, 0.016187252459900808, -0.0009025319973645145, 0.008994110538870467, 0.008994110538870467, 0.1748493578165619, 0.019827017544782343, 0.029765867148788757, 0.0021903973239445138, 0.013675806231600026, 0.01647342377187524, 0.03019554384886378, 0.00345926079543293, 0.012684926141063, 0.017130092404401203, 0.029109398458409215, -0.0027423163609891048, 0.017500286516002356, 0.017500286516002356, 0.028615830177285688, -0.0018211000964552335, 0.016363310006409684, 0.016363310006409684], [-0.011939056137969013, -0.0020872422483196288, -0.00180907118652583, -6.316161391185163e-05, -0.0011997494041495408, -0.0012766724491389588, -0.0016524944219691474, -0.0003477286454441522, -0.0009821646875008067, -0.0014431313689505277, -0.0024339602378612444, 0.0009937037041208392, -0.002145638826457563, -0.002145638826457563, -0.001970216149793652, -0.00014385266701144052, -0.0011802579061661138, -0.0011802579061661138, -0.014442814552659994, -0.0021059548777171296, -0.002055925398418409, 0.00018011455465486508, -0.0015779623217580324, -0.0013104068584864252, -0.0016368635044367711, -0.0002479203758784824, -0.0012046752544185805, -0.0015233304642269785, -0.0027423163609891048, 0.0016747403158460723, -0.002838474535953392, -0.002838474535953392, -0.002120384768264576, -2.6378241201442907e-05, -0.0014097577536522396, -0.0014097577536522396], [0.0848059038140127, 0.013318892078465091, 0.012392898108418655, 0.0013919914736099112, 0.006952859680136182, 0.008806760805024341, 0.012470523919334734, 0.0020279622250329124, 0.006546199491273242, 0.009230529993271615, 0.012634725033463233, -0.0016768201482673599, 0.009284416618531051, 0.009284416618531051, 0.01207174517344882, -0.0006464375172178946, 0.008336075091207075, 0.008336075091207075, 0.10545816254465167, 0.01644656735640279, 0.01795141474848395, 0.0011455275200792003, 0.010637812723686236, 0.012071027045695654, 0.018321574665190722, 0.0016217765128008434, 0.010297446448782756, 0.012365152188185135, 0.017500286516002356, -0.002838474535953392, 0.013483877865118309, 0.013483877865118309, 0.016897389283524144, -0.0013895247663947786, 0.012102259534336959, 0.012102259534336959], [0.0848059038140127, 0.013318892078465091, 0.012392898108418655, 0.0013919914736099112, 0.006952859680136182, 0.008806760805024341, 0.012470523919334734, 0.0020279622250329124, 0.006546199491273242, 0.009230529993271615, 0.012634725033463233, -0.0016768201482673599, 0.009284416618531051, 0.009284416618531051, 0.01207174517344882, -0.0006464375172178946, 0.008336075091207075, 0.008336075091207075, 0.10545816254465167, 0.01644656735640279, 0.01795141474848395, 0.0011455275200792003, 0.010637812723686236, 0.012071027045695654, 0.018321574665190722, 0.0016217765128008434, 0.010297446448782756, 0.012365152188185135, 0.017500286516002356, -0.002838474535953392, 0.013483877865118309, 0.013483877865118309, 0.016897389283524144, -0.0013895247663947786, 0.012102259534336959, 0.012102259534336959], [0.12410988357189837, 0.013082765337306053, 0.016404333486447927, 0.001647752170201596, 0.007104941527030805, 0.009279007707073536, 0.01631898265757379, 0.0031204503990416256, 0.0060953716391167435, 0.0102162849715358, 0.01654840672323936, -0.001005874515002585, 0.009196017583394164, 0.009196017583394164, 0.016703322071233134, -0.0011280913097683166, 0.009306753391053208, 0.009306753391053208, 0.17583123515543844, 0.02000880825908969, 0.03087544896104438, 0.0020475976355147064, 0.01409616358381436, 0.016685856605296628, 0.03150238451449687, 0.0037235557687789645, 0.012808759908477142, 0.017582496543288775, 0.028615830177285688, -0.002120384768264576, 0.016897389283524144, 0.016897389283524144, 0.03095472383985313, -0.0024163654808552807, 0.017560248342668602, 0.017560248342668602], [-0.014241858893984296, -0.0021597796457995116, -0.0018120884993667586, 6.946462638987046e-05, -0.0013334741886531244, -0.0012379715152906398, -0.0018292191924360608, -0.00048475148036149907, -0.0009391540341901392, -0.0015732582518156533, -0.001977439875771917, -7.22309025923408e-05, -0.001262923571853394, -0.001262923571853394, -0.0024190961132287783, 0.0008910326111195463, -0.0020855088225206478, -0.0020855088225206478, -0.013333939189518897, -0.0022032415951337646, -0.001819535880982965, 0.0003577818490974639, -0.0017127951904986759, -0.001220499778497642, -0.0016472931059884767, -0.00011420748210993144, -0.001326176361999632, -0.0014843557418526786, -0.0018211000964552335, -2.6378241201442907e-05, -0.0013895247663947786, -0.0013895247663947786, -0.0024163654808552807, 0.0015957864840691592, -0.002758168312050839, -0.002758168312050839], [0.08655590287340319, 0.013368222290772712, 0.012412491484723474, 0.0012797479063465407, 0.007053598791478963, 0.008758241358753246, 0.012597165260660844, 0.0021564843611129583, 0.00647854436943179, 0.009328869731917724, 0.012149418588547492, -0.0007704413009916475, 0.008483342275716465, 0.008483342275716465, 0.012506914604819267, -0.0014800096867813738, 0.009078131660126772, 0.009078131660126772, 0.10430656805293549, 0.016534025805006822, 0.017803344596319208, 0.0009632867647705825, 0.010777260025331368, 0.011973497620210433, 0.01838624237306308, 0.0015769473001738467, 0.010348654176948944, 0.012368278481901146, 0.016363310006409684, -0.0014097577536522396, 0.012102259534336959, 0.012102259534336959, 0.017560248342668602, -0.002758168312050839, 0.013393376035160404, 0.013393376035160404], [0.08655590287340319, 0.013368222290772712, 0.012412491484723474, 0.0012797479063465407, 0.007053598791478963, 0.008758241358753246, 0.012597165260660844, 0.0021564843611129583, 0.00647854436943179, 0.009328869731917724, 0.012149418588547492, -0.0007704413009916475, 0.008483342275716465, 0.008483342275716465, 0.012506914604819267, -0.0014800096867813738, 0.009078131660126772, 0.009078131660126772, 0.10430656805293549, 0.016534025805006822, 0.017803344596319208, 0.0009632867647705825, 0.010777260025331368, 0.011973497620210433, 0.01838624237306308, 0.0015769473001738467, 0.010348654176948944, 0.012368278481901146, 0.016363310006409684, -0.0014097577536522396, 0.012102259534336959, 0.012102259534336959, 0.017560248342668602, -0.002758168312050839, 0.013393376035160404, 0.013393376035160404]])

    def niqe_calc(inputVideoData):
        """Computes Naturalness Image Quality Evaluator. [#f1]_
        Input a video of any quality and get back its distance frame-by-frame
        from naturalness.
        Parameters
        ----------
        inputVideoData : ndarray
            Input video, ndarray of dimension (T, M, N, C), (T, M, N), (M, N, C), or (M, N),
            where T is the number of frames, M is the height, N is width,
            and C is number of channels. Here C is only allowed to be 1.
        Returns
        -------
        niqe_array : ndarray
            The niqe results, ndarray of dimension (T,), where T
            is the number of frames
        References
        ----------
        .. [#f1] Mittal, Anish, Rajiv Soundararajan, and Alan C. Bovik. "Making a 'completely blind' image quality analyzer." IEEE Signal Processing Letters 20.3 (2013): 209-212.
        """
        # cache
        patch_size = 96

        pop_mu = np.ravel(Niqe.pop_mu)
        pop_cov = Niqe.pop_cov


        # load the training data
        inputVideoData = skvideo.utils.vshape(inputVideoData)

        T, M, N, C = inputVideoData.shape

        assert C == 1, "niqe called with videos containing %d channels. Please supply only the luminance channel" % (C,)
        assert M > (patch_size*2+1), "niqe called with small frame size, requires > 192x192 resolution video using current training parameters"
        assert N > (patch_size*2+1), "niqe called with small frame size, requires > 192x192 resolution video using current training parameters"

        niqe_scores = np.zeros(T, dtype=np.float32)

        for t in range(T):
          feats = get_patches_test_features(inputVideoData[t, :, :, 0], patch_size)
          sample_mu = np.mean(feats, axis=0)
          sample_cov = np.cov(feats.T)

          X = sample_mu - pop_mu
          covmat = ((pop_cov+sample_cov)/2.0)
          pinvmat = scipy.linalg.pinv(covmat)
          niqe_scores[t] = np.sqrt(np.dot(np.dot(X, pinvmat), X))

        return niqe_scores


def calc_niqe_features(image, gray=False):
    """
    calculate niqe features

    References
    ----------
    - scikit-video
    - Mittal, Anish, Rajiv Soundararajan, and Alan C. Bovik. "Making a ‘completely blind’ image quality analyzer."
      In: IEEE Signal Processing Letters 20.3 (2013): 209-212.
    """
    if not gray:
        image = skimage.color.rgb2gray(image)
    niqe = Niqe.niqe_calc(image)
    return float(niqe[0])


def ceiq(image, gray=False):
    """
    re-implemented and extended version of https://github.com/mtobeiyf/CEIQ/blob/master/CEIQ.m
    features for "No-Reference Quality Assessment of Contrast-Distorted Images using Contrast Enhancement"

    References
    ----------
    - Jia Yan, Jie Li, Xin Fu: "No-Reference Quality Assessment of Contrast-Distorted Images using Contrast Enhancement",
      In: Journal of Visual Communication and Image Representation, 2018
    """
    if not gray:
        image = skimage.color.rgb2gray(image)
    # equalization
    image_eq = exposure.equalize_hist(image)

    # calculate similarity feature
    f1 = skimage.metrics.structural_similarity(image, image_eq)

    # create histograms
    h1, _ = np.histogram(image.flatten(), bins=128)
    h2, _ = np.histogram(image_eq.flatten(), bins=128)

    # normalize histograms
    h1 = h1 / (image.shape[0] * image.shape[1])
    h2 = h2 / (image.shape[0] * image.shape[1])

    # select only positive values
    selection = (h1 > 0) & (h2 > 0)
    h1 = h1[selection]
    h2 = h2[selection]

    # calculate logs
    log_h1 = np.log2(h1)
    log_h2 = np.log2(h2)

    # these features are somehow entropy
    f2 = -sum(h1 * log_h1)
    f3 = -sum(h2 * log_h2)
    f4 = -sum(h1 * log_h2)
    f5 = -sum(h2 * log_h1)

    # additional features, that are not in the paper and added by stg7
    add1 = skimage.metrics.peak_signal_noise_ratio(image, image_eq)
    hd = h1 - h2
    add2 = hd.max()
    add3 = hd.min()
    add4 = hd.mean()
    add5 = hd.std()

    res = [f1, f2, f3, f4, f5, add1, add2, add3, add4, add5]
    return [float(x) for x in res]


def calc_noise(frame):
    """
    calcualtes noise std based on skimage.restoration.estimate_sigma
    "Robust wavelet-based estimator of the (Gaussian) noise standard deviation."

    Returns
    -------
    mean value of all channels for std value of noise assuming that the noise has a Gaussian distribution
    """
    return float(skimage.restoration.estimate_sigma(frame, average_sigmas=True, multichannel=True))
